@online{resena_tec,
  author  = {{Tecnológico de Costa Rica}},
  title   = {Reseña del TEC},
  url     = {https://www.tec.ac.cr/resena-tec},
  urldate = {2025-04-04}
}

@article{castro-godinez_axls_2021,
  title        = {{AxLS}: A Framework for Approximate Logic Synthesis Based on Netlist Transformations},
  volume       = {68},
  issn         = {1549-7747, 1558-3791},
  url          = {https://ieeexplore.ieee.org/document/9386244/},
  doi          = {10.1109/TCSII.2021.3068757},
  shorttitle   = {{AxLS}},
  abstract     = {With the rise of Approximate Computing as an energy-efﬁcient design paradigm that is amenable to errortolerant applications, different Approximate Logic Synthesis ({ALS}) techniques have been reported in the literature to generate approximate circuits from accurate implementations automatically. One {ALS} technique focuses on performing structural netlist transformations. The gate-level netlist representation of a circuit is simpliﬁed to reduce the circuit area and power consumption while producing a deﬁned error level at the output. However, currently, there is no framework or tool available to test and explore existing netlist transformation techniques for {ALS}. This limits the proposal of novel approaches and their corresponding comparison against state-of-the-art contributions. In this brief, we present {AxLS}, an open-source framework for {ALS} techniques based on netlist transformations. We validate our framework’s functionality by implementing a reported {ALS} technique and one proposed, using open-source circuit synthesis and simulation tools, and generating approximate arithmetic circuits from accurate {RTL} descriptions.},
  pages        = {2845--2849},
  number       = {8},
  journaltitle = {{IEEE} Transactions on Circuits and Systems {II}: Express Briefs},
  shortjournal = {{IEEE} Trans. Circuits Syst. {II}},
  author       = {Castro-Godinez, Jorge and Barrantes-Garcia, Humberto and Shafique, Muhammad and Henkel, Jorg},
  urldate      = {2025-02-07},
  date         = {2021-08},
  langid       = {english},
  file         = {PDF:/home/igna/Zotero/storage/ZCQUNU6W/Castro-Godinez et al. - 2021 - AxLS A Framework for Approximate Logic Synthesis Based on Netlist Transformations.pdf:application/pdf}
}

@inproceedings{rai_logic_2021,
  location   = {Grenoble, France},
  title      = {Logic Synthesis Meets Machine Learning: Trading Exactness for Generalization},
  isbn       = {978-3-9819263-5-4},
  url        = {https://ieeexplore.ieee.org/document/9473972/},
  doi        = {10.23919/DATE51398.2021.9473972},
  shorttitle = {Logic Synthesis Meets Machine Learning},
  abstract   = {Logic synthesis is a fundamental step in hardware design whose goal is to ﬁnd structural representations of Boolean functions while minimizing delay and area. If the function is completely-speciﬁed, the implementation accurately represents the function. If the function is incompletely-speciﬁed, the implementation has to be true only on the care set. While most of the algorithms in logic synthesis rely on {SAT} and Boolean methods to exactly implement the care set, we investigate learning in logic synthesis, attempting to trade exactness for generalization. This work is directly related to machine learning where the care set is the training set and the implementation is expected to generalize on a validation set. We present learning incompletely-speciﬁed functions based on the results of a competition conducted at {IWLS} 2020. The goal of the competition was to implement 100 functions given by a set of care minterms for training, while testing the implementation using a set of validation minterms sampled from the same function. We make this benchmark suite available and offer a detailed comparative analysis of the different approaches to learning.},
  eventtitle = {2021 Design, Automation \& Test in Europe Conference \& Exhibition ({DATE})},
  pages      = {1026--1031},
  booktitle  = {2021 Design, Automation \& Test in Europe Conference \& Exhibition ({DATE})},
  publisher  = {{IEEE}},
  author     = {Rai, Shubham and Neto, Walter Lau and Miyasaka, Yukio and Zhang, Xinpei and Yu, Mingfei and Yi, Qingyang and Fujita, Masahiro and Manske, Guilherme B. and Pontes, Matheus F. and Da Rosa, Leomar S. and De Aguiar, Marilton S. and Butzen, Paulo F. and Chien, Po-Chun and Huang, Yu-Shan and Wang, Hoa-Ren and Jiang, Jie-Hong R. and Gu, Jiaqi and Zhao, Zheng and Jiang, Zixuan and Pan, David Z. and De Abreu, Brunno A. and De Souza Campos, Isac and Berndt, Augusto and Meinhardt, Cristina and Carvalho, Jonata T. and Grellert, Mateus and Bampi, Sergio and Lohana, Aditya and Kumar, Akash and Zeng, Wei and Davoodi, Azadeh and Topaloglu, Rasit O. and Zhou, Yuan and Dotzel, Jordan and Zhang, Yichi and Wang, Hanyu and Zhang, Zhiru and Tenace, Valerio and Gaillardon, Pierre-Emmanuel and Mishchenko, Alan and Chatterjee, Satrajit},
  urldate    = {2025-02-07},
  date       = {2021-02-01},
  langid     = {english},
  keywords   = {Leído, Método Favorito},
  file       = {PDF:/home/igna/Zotero/storage/7LB9BP3Y/Rai et al. - 2021 - Logic Synthesis Meets Machine Learning Trading Exactness for Generalization.pdf:application/pdf}
}

@inproceedings{boroumand_learning_2021,
  location   = {Tokyo Japan},
  title      = {Learning Boolean Circuits from Examples for Approximate Logic Synthesis},
  isbn       = {978-1-4503-7999-1},
  url        = {https://dl.acm.org/doi/10.1145/3394885.3431559},
  doi        = {10.1145/3394885.3431559},
  abstract   = {Many computing applications are inherently error resilient. Thus, it is possible to decrease computing accuracy to achieve greater efficiency in area, performance, and/or energy consumption. In recent years, a slew of automatic techniques for approximate computing has been proposed; however, most of these techniques require full knowledge of an exact, or ‘golden’ circuit description. In contrast, there has been significant recent interest in synthesizing computation from examples, a form of supervised learning. In this paper, we explore the relationship between supervised learning of Boolean circuits and existing work on synthesizing incompletely-specified functions. We show that when considered through a machine learning lens, the latter work provides a good training accuracy but poor test accuracy. We contrast this with prior work from the 1990s which uses mutual information to steer the search process, aiming for good generalization. By combining this early work with a recent approach to learning logic functions, we are able to achieve a scalable and efficient machine learning approach for Boolean circuits in terms of area/delay/test-error trade-off.},
  eventtitle = {{ASPDAC} '21: 26th Asia and South Pacific Design Automation Conference},
  pages      = {524--529},
  booktitle  = {Proceedings of the 26th Asia and South Pacific Design Automation Conference},
  publisher  = {{ACM}},
  author     = {Boroumand, Sina and Bouganis, Christos-Savvas and Constantinides, George A.},
  urldate    = {2025-02-07},
  date       = {2021-01-18},
  langid     = {english},
  keywords   = {Leído},
  file       = {PDF:/home/igna/Zotero/storage/9J9D4PAR/Boroumand et al. - 2021 - Learning Boolean Circuits from Examples for Approximate Logic Synthesis.pdf:application/pdf}
}

@inproceedings{de_abreu_netlist_2022,
  location   = {Puerto Varas, Chile},
  title      = {On the Netlist Gate-level Pruning for Tree-based Machine Learning Accelerators},
  rights     = {https://doi.org/10.15223/policy-029},
  isbn       = {978-1-6654-2008-2},
  url        = {https://ieeexplore.ieee.org/document/9789043/},
  doi        = {10.1109/LASCAS53948.2022.9789043},
  abstract   = {The technology advances in the recent years have led to the spread use of Machine Learning ({ML}) models in embedded systems. Due to the battery limitations of such edge devices, energy consumption has become a major problem. Tree-based models, such as Decision Trees ({DTs}) and Random Forests ({RFs}), are well-known {ML} tools that provide higher than standard accuracy results for several tasks. These tools are convenient for battery-powered devices due to their simplicity, and they can be further optimized with approximate computing techniques. This paper explores gate-level pruning for {DTs} and {RFs}. By using a framework that generates {VLSI} descriptions of the {ML} models, we investigate gate-level pruning to the mapped netlist generated after logic synthesis for three case studies. Several analyses on the energy- and area-accuracy trade-offs were performed and we found that we can obtain signiﬁcant energy and area savings for small or even negligible accuracy drops, which indicates that pruning techniques can be applied to optimize tree-based hardware implementations.},
  eventtitle = {2022 {IEEE} 13th Latin America Symposium on Circuits and System ({LASCAS})},
  pages      = {01--04},
  booktitle  = {2022 {IEEE} 13th Latin America Symposium on Circuits and System ({LASCAS})},
  publisher  = {{IEEE}},
  author     = {De Abreu, Brunno A. and Paim, Guilherme and Castro-Godinez, Jorge and Grellert, Mateus and Bampi, Sergio},
  urldate    = {2025-02-07},
  date       = {2022-03-01},
  langid     = {english},
  keywords   = {Leído},
  file       = {PDF:/home/igna/Zotero/storage/YHLA3KP5/De Abreu et al. - 2022 - On the Netlist Gate-level Pruning for Tree-based Machine Learning Accelerators.pdf:application/pdf}
}

@inproceedings{pasandi_approximate_2019,
  location   = {Santa Clara, {CA}, {USA}},
  title      = {Approximate Logic Synthesis: A Reinforcement Learning-Based Technology Mapping Approach},
  rights     = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/{IEEE}.html},
  isbn       = {978-1-7281-0392-1},
  url        = {https://ieeexplore.ieee.org/document/8697679/},
  doi        = {10.1109/ISQED.2019.8697679},
  shorttitle = {Approximate Logic Synthesis},
  abstract   = {Approximate Logic Synthesis ({ALS}) is the process of synthesizing and mapping a given Boolean network to a library of logic cells so that the magnitude/rate of error between outputs of the approximate and initial (exact) Boolean netlists is bounded from above by a predetermined total error threshold. In this paper, we present Q-{ALS}, a novel framework for {ALS} with focus on the technology mapping phase. Q-{ALS} incorporates reinforcement learning and utilizes Boolean difference calculus to estimate the maximum error rate that each node of the given network can tolerate such that the total error rate at non of the outputs of the mapped netlist exceeds a predetermined maximum error rate, and the worst case delay and the total area are minimized. Maximum Hamming Distance ({MHD}) between exact and approximate truth tables of cuts of each node is used as the error metric. In Q-{ALS}, a Q-Learning agent is trained with a sufﬁcient number of iterations aiming to select the ﬁttest values of {MHD} for each node, and in a cut-based technology mapping approach, the best supergates (in terms of delay and area, bounded further by the ﬁttest {MHD}) are selected towards implementing each node. Experimental results show that having set the required accuracy of 95\% at the primary outputs, Q-{ALS} reduces the total cost in terms of area and delay by up to 70\% and 36\%, respectively, and also reduces the run-time by 2.21× on average, when compared to the best state-of-the-art academic {ALS} tools.},
  eventtitle = {2019 20th International Symposium on Quality Electronic Design ({ISQED})},
  pages      = {26--32},
  booktitle  = {20th International Symposium on Quality Electronic Design ({ISQED})},
  publisher  = {{IEEE}},
  author     = {Pasandi, Ghasem and Nazarian, Shahin and Pedram, Massoud},
  urldate    = {2025-02-07},
  date       = {2019-03},
  langid     = {english},
  keywords   = {Leído},
  file       = {PDF:/home/igna/Zotero/storage/X64MGBTY/Pasandi et al. - 2019 - Approximate Logic Synthesis A Reinforcement Learning-Based Technology Mapping Approach.pdf:application/pdf}
}

@inproceedings{pasandi_deep-powerx_2020,
  location   = {Boston Massachusetts},
  title      = {Deep-{PowerX}: a deep learning-based framework for low-power approximate logic synthesis},
  isbn       = {978-1-4503-7053-0},
  url        = {https://dl.acm.org/doi/10.1145/3370748.3406555},
  doi        = {10.1145/3370748.3406555},
  shorttitle = {Deep-{PowerX}},
  abstract   = {This paper aims at integrating three powerful techniques namely Deep Learning, Approximate Computing, and Low Power Design into a strategy to optimize logic at the synthesis level. We utilize advances in deep learning to guide an approximate logic synthesis engine to minimize the dynamic power consumption of a given digital {CMOS} circuit, subject to a predetermined error rate at the primary outputs. Our framework, Deep-{PowerX}1, focuses on replacing or removing gates on a technology-mapped network and uses a Deep Neural Network ({DNN}) to predict error rates at primary outputs of the circuit when a specific part of the netlist is approximated. The primary goal of Deep-{PowerX} is to reduce the dynamic power whereas area reduction serves as a secondary objective. Using the said {DNN}, Deep-{PowerX} is able to reduce the exponential time complexity of standard approximate logic synthesis to linear time. Experiments are done on numerous open source benchmark circuits. Results show significant reduction in power and area by up to 1.47× and 1.43× compared to exact solutions and by up to 22\% and 27\% compared to state-of-the-art approximate logic synthesis tools while having orders of magnitudes lower run-time.},
  eventtitle = {{ISLPED} '20: {ACM}/{IEEE} International Symposium on Low Power Electronics and Design},
  pages      = {73--78},
  booktitle  = {Proceedings of the {ACM}/{IEEE} International Symposium on Low Power Electronics and Design},
  publisher  = {{ACM}},
  author     = {Pasandi, Ghasem and Peterson, Mackenzie and Herrera, Moises and Nazarian, Shahin and Pedram, Massoud},
  urldate    = {2024-12-16},
  date       = {2020-08-10},
  langid     = {english},
  keywords   = {Método Favorito},
  file       = {PDF:/home/igna/Zotero/storage/864VLLMC/Pasandi et al. - 2020 - Deep-PowerX a deep learning-based framework for low-power approximate logic synthesis.pdf:application/pdf}
}

@inproceedings{zeng_sampling-based_2021,
  location   = {Munich, Germany},
  title      = {Sampling-Based Approximate Logic Synthesis: An Explainable Machine Learning Approach},
  rights     = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/{IEEE}.html},
  isbn       = {978-1-6654-4507-8},
  url        = {https://ieeexplore.ieee.org/document/9643484/},
  doi        = {10.1109/ICCAD51958.2021.9643484},
  shorttitle = {Sampling-Based Approximate Logic Synthesis},
  eventtitle = {2021 {IEEE}/{ACM} International Conference On Computer Aided Design ({ICCAD})},
  pages      = {1--9},
  booktitle  = {2021 {IEEE}/{ACM} International Conference On Computer Aided Design ({ICCAD})},
  publisher  = {{IEEE}},
  author     = {Zeng, Wei and Davoodi, Azadeh and Topaloglu, Rasit Onur},
  urldate    = {2025-02-20},
  date       = {2021-11-01},
  keywords   = {Leído, Método Favorito},
  file       = {PDF:/home/igna/Zotero/storage/SIQQRRAU/Zeng et al. - 2021 - Sampling-Based Approximate Logic Synthesis An Explainable Machine Learning Approach.pdf:application/pdf}
}

@article{rajput_improved_2023,
  title        = {Improved Learning-Based Design Space Exploration for Approximate Instance Generation},
  volume       = {11},
  rights       = {https://creativecommons.org/licenses/by-nc-nd/4.0/},
  issn         = {2169-3536},
  url          = {https://ieeexplore.ieee.org/document/10049435/},
  doi          = {10.1109/ACCESS.2023.3247303},
  pages        = {18291--18299},
  journaltitle = {{IEEE} Access},
  shortjournal = {{IEEE} Access},
  author       = {Rajput, Muhammad Awais and Alyami, Sultan and Ahmed, Qazi Arbab and Alshahrani, Hani and Asiri, Yousef and Shaikh, Asadullah},
  urldate      = {2025-02-21},
  date         = {2023},
  keywords     = {Leído},
  file         = {Full Text:/home/igna/Zotero/storage/H7A4XDAU/Rajput et al. - 2023 - Improved Learning-Based Design Space Exploration for Approximate Instance Generation.pdf:application/pdf}
}

@article{ye_timing-driven_2024,
  title        = {Timing-Driven Technology Mapping Approximation Based on Reinforcement Learning},
  volume       = {43},
  rights       = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/{IEEE}.html},
  issn         = {0278-0070, 1937-4151},
  url          = {https://ieeexplore.ieee.org/document/10477245/},
  doi          = {10.1109/TCAD.2024.3379016},
  pages        = {2755--2768},
  number       = {9},
  journaltitle = {{IEEE} Transactions on Computer-Aided Design of Integrated Circuits and Systems},
  shortjournal = {{IEEE} Trans. Comput.-Aided Des. Integr. Circuits Syst.},
  author       = {Ye, Yuyang and Chen, Tinghuan and Gao, Yifei and Yan, Hao and Yu, Bei and Shi, Longxing},
  urldate      = {2025-02-21},
  date         = {2024-09},
  keywords     = {Leído},
  file         = {PDF:/home/igna/Zotero/storage/3496X9Q5/Ye et al. - 2024 - Timing-Driven Technology Mapping Approximation Based on Reinforcement Learning.pdf:application/pdf}
}

@inproceedings{awais_deepapprox_2024,
  location   = {Knoxville, {TN}, {USA}},
  title      = {{DeepApprox}: Rapid Deep Learning based Design Space Exploration of Approximate Circuits via Check-pointing},
  rights     = {https://doi.org/10.15223/policy-029},
  isbn       = {979-8-3503-5411-9},
  url        = {https://ieeexplore.ieee.org/document/10682776/},
  doi        = {10.1109/ISVLSI61997.2024.00027},
  shorttitle = {{DeepApprox}},
  eventtitle = {2024 {IEEE} Computer Society Annual Symposium on {VLSI} ({ISVLSI})},
  pages      = {88--93},
  booktitle  = {2024 {IEEE} Computer Society Annual Symposium on {VLSI} ({ISVLSI})},
  publisher  = {{IEEE}},
  author     = {Awais, Muhammad and Mohammadi, Hassan Ghasemzadeh and Platzner, Marco},
  urldate    = {2025-02-21},
  date       = {2024-07-01},
  keywords   = {Leído},
  file       = {PDF:/home/igna/Zotero/storage/LMX5SHBQ/Awais et al. - 2024 - DeepApprox Rapid Deep Learning based Design Space Exploration of Approximate Circuits via Check-poi.pdf:application/pdf}
}

@misc{wu_circuit_2025,
  title      = {Circuit Representation Learning with Masked Gate Modeling and Verilog-{AIG} Alignment},
  url        = {http://arxiv.org/abs/2502.12732},
  doi        = {10.48550/arXiv.2502.12732},
  abstract   = {Understanding the structure and function of circuits is crucial for electronic design automation ({EDA}). Circuits can be formulated as And-Inverter graphs ({AIGs}), enabling efficient implementation of representation learning through graph neural networks ({GNNs}). Masked modeling paradigms have been proven effective in graph representation learning. However, masking augmentation to original circuits will destroy their logical equivalence, which is unsuitable for circuit representation learning. Moreover, existing masked modeling paradigms often prioritize structural information at the expense of abstract information such as circuit function. To address these limitations, we introduce {MGVGA}, a novel constrained masked modeling paradigm incorporating masked gate modeling ({MGM}) and Verilog-{AIG} alignment ({VGA}). Specifically, {MGM} preserves logical equivalence by masking gates in the latent space rather than in the original circuits, subsequently reconstructing the attributes of these masked gates. Meanwhile, large language models ({LLMs}) have demonstrated an excellent understanding of the Verilog code functionality. Building upon this capability, {VGA} performs masking operations on original circuits and reconstructs masked gates under the constraints of equivalent Verilog codes, enabling {GNNs} to learn circuit functions from {LLMs}. We evaluate {MGVGA} on various logic synthesis tasks for {EDA} and show the superior performance of {MGVGA} compared to previous state-of-the-art methods. Our code is available at https://github.com/wuhy68/{MGVGA}.},
  number     = {{arXiv}:2502.12732},
  publisher  = {{arXiv}},
  author     = {Wu, Haoyuan and Zheng, Haisheng and Pu, Yuan and Yu, Bei},
  urldate    = {2025-03-10},
  date       = {2025-02-18},
  langid     = {english},
  eprinttype = {arxiv},
  eprint     = {2502.12732 [cs]},
  keywords   = {Computer Science - Machine Learning},
  file       = {PDF:/home/igna/Zotero/storage/V74JGXX6/Wu et al. - 2025 - Circuit Representation Learning with Masked Gate Modeling and Verilog-AIG Alignment.pdf:application/pdf}
}

@article{huang_circuit_2023,
  title        = {Circuit Learning: From Decision Trees to Decision Graphs},
  volume       = {42},
  rights       = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/{IEEE}.html},
  issn         = {0278-0070, 1937-4151},
  url          = {https://ieeexplore.ieee.org/document/10075520/},
  doi          = {10.1109/TCAD.2023.3258747},
  shorttitle   = {Circuit Learning},
  pages        = {3985--3996},
  number       = {11},
  journaltitle = {{IEEE} Transactions on Computer-Aided Design of Integrated Circuits and Systems},
  shortjournal = {{IEEE} Trans. Comput.-Aided Des. Integr. Circuits Syst.},
  author       = {Huang, Yu-Shan and Jiang, Jie-Hong R.},
  urldate      = {2025-03-14},
  date         = {2023-11},
  keywords     = {Leído, Método Favorito},
  file         = {PDF:/home/igna/Zotero/storage/XZBYJ6IF/Huang and Jiang - 2023 - Circuit Learning From Decision Trees to Decision Graphs.pdf:application/pdf}
}

@misc{hu_optdtals_2024,
  title      = {{OPTDTALS}: Approximate Logic Synthesis via Optimal Decision Trees Approach},
  rights     = {{arXiv}.org perpetual, non-exclusive license},
  url        = {https://arxiv.org/abs/2408.12304},
  doi        = {10.48550/ARXIV.2408.12304},
  shorttitle = {{OPTDTALS}},
  abstract   = {The growing interest in Explainable Artificial Intelligence ({XAI}) motivates promising studies of computing optimal Interpretable Machine Learning models, especially decision trees. Such models generally provide optimality in compact size or empirical accuracy. Recent works focus on improving efficiency due to the natural scalability issue. The application of such models to practical problems is quite limited. As an emerging problem in circuit design, Approximate Logic Synthesis ({ALS}) aims to reduce circuit complexity by sacrificing correctness. Recently, multiple heuristic machine learning methods have been applied in {ALS}, which learns approximated circuits from samples of input-output pairs.
                In this paper, we propose a new {ALS} methodology realizing the approximation via learning optimal decision trees in empirical accuracy. Compared to previous heuristic {ALS} methods, the guarantee of optimality achieves a more controllable trade-off between circuit complexity and accuracy. Experimental results show clear improvements in our methodology in the quality of approximated designs (circuit complexity and accuracy) compared to the state-of-the-art approaches.},
  publisher  = {{arXiv}},
  author     = {Hu, Hao and Cai, Shaowei},
  urldate    = {2025-03-14},
  date       = {2024},
  note       = {Version Number: 1},
  keywords   = {Leído, {FOS}: Computer and information sciences, Método Favorito, Artificial Intelligence (cs.{AI})},
  file       = {PDF:/home/igna/Zotero/storage/KJ5KLT4B/Hu and Cai - 2024 - OPTDTALS Approximate Logic Synthesis via Optimal Decision Trees Approach.pdf:application/pdf}
}

@article{berndt_cgp-based_2022,
  title        = {{CGP}-based Logic Flow: Optimizing Accuracy and Size of Approximate Circuits},
  volume       = {17},
  rights       = {http://creativecommons.org/licenses/by-nc-nd/4.0},
  issn         = {1872-0234, 1807-1953},
  url          = {https://jics.org.br/ojs/index.php/JICS/article/view/546},
  doi          = {10.29292/jics.v17i1.546},
  shorttitle   = {{CGP}-based Logic Flow},
  abstract     = {Logic synthesis tools face tough challenges when providing algorithms for synthesizing circuits with increased inputs and complexity. Machine learning techniques show high performance in solving specific problems, being an attractive option to improve electronic design tools. We explore Cartesian Genetic Programming ({CGP}) for logic optimization of exact or approximate Boolean functions in our work. The proposed {CGP}-based flow receives the expected circuit behavior as a truth-table and either performs the synthesis starting from random circuits or optimizes a circuit description provided in the format of an {AND}-Inverter Graph. The optimization flow improves solutions found by other techniques, using them for bootstrapping the evolutionary process. We use two metrics to evaluate our {CGP}-based flow: (i) the number of {AIG} nodes or (ii) the circuit accuracy. The results obtained showed that the {CGP}-based flow provided at least 22.6\% superior results when considering the trade-off between accuracy and size compared with two other methods that brought the best accuracy and size outcomes, respectively.},
  pages        = {1--12},
  number       = {1},
  journaltitle = {Journal of Integrated Circuits and Systems},
  shortjournal = {{JICS}},
  author       = {Berndt, Augusto André Souza and Abreu, Brunno and Campos, Isac S. and Lima, Bryan and Grellert, Mateus and Carvalho, Jonata T. and Meinhardt, Cristina},
  urldate      = {2025-03-14},
  date         = {2022-04-30},
  file         = {Full Text:/home/igna/Zotero/storage/6VG7KTEG/Berndt et al. - 2022 - CGP-based Logic Flow Optimizing Accuracy and Size of Approximate Circuits.pdf:application/pdf}
}

@inproceedings{prats_ramos_impact_2024,
  location   = {Joao Pessoa, Brazil},
  title      = {Impact on Delay, Power and Area of Machine Learning-based Approximate Logic Synthesis},
  rights     = {https://doi.org/10.15223/policy-029},
  isbn       = {979-8-3503-9169-5},
  url        = {https://ieeexplore.ieee.org/document/10703989/},
  doi        = {10.1109/SBCCI62366.2024.10703989},
  eventtitle = {2024 37th {SBC}/{SBMicro}/{IEEE} Symposium on Integrated Circuits and Systems Design ({SBCCI})},
  pages      = {1--5},
  booktitle  = {2024 37th {SBC}/{SBMicro}/{IEEE} Symposium on Integrated Circuits and Systems Design ({SBCCI})},
  publisher  = {{IEEE}},
  author     = {Prats Ramos, João Carlos and Sachetti, Naiara and Berndt, Augusto and Carvalho, Jônata T. and Meinhardt, Cristina},
  urldate    = {2025-03-14},
  date       = {2024-09-02},
  keywords   = {Leído, Método Favorito},
  file       = {PDF:/home/igna/Zotero/storage/Q5PPHFUS/Prats Ramos et al. - 2024 - Impact on Delay, Power and Area of Machine Learning-based Approximate Logic Synthesis.pdf:application/pdf}
}

@inproceedings{de_abreu_fast_2021,
  location   = {Daegu, Korea},
  title      = {Fast Logic Optimization Using Decision Trees},
  rights     = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/{IEEE}.html},
  isbn       = {978-1-7281-9201-7},
  url        = {https://ieeexplore.ieee.org/document/9401664/},
  doi        = {10.1109/ISCAS51556.2021.9401664},
  eventtitle = {2021 {IEEE} International Symposium on Circuits and Systems ({ISCAS})},
  pages      = {1--5},
  booktitle  = {2021 {IEEE} International Symposium on Circuits and Systems ({ISCAS})},
  publisher  = {{IEEE}},
  author     = {De Abreu, Brunno A. and Berndt, Augusto and Campos, Isac S. and Meinhardt, Cristina and Carvalho, Jonata T. and Grellert, Mateus and Bampi, Sergio},
  urldate    = {2025-03-14},
  date       = {2021-05},
  keywords   = {Leído, Método Favorito},
  file       = {PDF:/home/igna/Zotero/storage/KU2DB99N/De Abreu et al. - 2021 - Fast Logic Optimization Using Decision Trees.pdf:application/pdf}
}

@inproceedings{miyasaka_logic_2021,
  location   = {Grenoble, France},
  title      = {Logic Synthesis for Generalization and Learning Addition},
  isbn       = {978-3-9819263-5-4},
  url        = {https://ieeexplore.ieee.org/document/9474169/},
  doi        = {10.23919/DATE51398.2021.9474169},
  eventtitle = {2021 Design, Automation \& Test in Europe Conference \& Exhibition ({DATE})},
  pages      = {1032--1037},
  booktitle  = {2021 Design, Automation \& Test in Europe Conference \& Exhibition ({DATE})},
  publisher  = {{IEEE}},
  author     = {Miyasaka, Yukio and Zhang, Xinpei and Yu, Mingfei and Yi, Qingyang and Fujita, Masahiro},
  urldate    = {2025-03-25},
  date       = {2021-02-01},
  keywords   = {Leído, Método Favorito},
  file       = {PDF:/home/igna/Zotero/storage/GH8FJCPS/Miyasaka et al. - 2021 - Logic Synthesis for Generalization and Learning Addition.pdf:application/pdf}
}

@book{russell2016artificial,
  title     = {Artificial intelligence: a modern approach},
  author    = {Russell, Stuart J and Norvig, Peter},
  year      = {2016},
  publisher = {pearson},
  pages     = {651, 653, 655, 657, 666, 696-697, 751-752}
}

@article{sutton_reinforcement_2018,
  title  = {Reinforcement learning: an introduction},
  author = {Sutton, Richard S. and Barto, Andrew},
  date   = {2018},
  note   = {Publisher: The {MIT} Press},
  file   = {PDF:/home/igna/Zotero/storage/9S535F3I/Barto and Sutton - 2018 - Reinforcement learning an introduction.pdf:application/pdf}
}


@book{bishop_pattern_2006,
  location  = {New York},
  title     = {Pattern recognition and machine learning},
  isbn      = {978-0-387-31073-2},
  series    = {Information science and statistics},
  pagetotal = {738},
  publisher = {Springer},
  author    = {Bishop, Christopher M.},
  date      = {2006},
  keywords  = {Machine learning, Pattern perception},
  file      = {PDF:/home/igna/Zotero/storage/SXTIQ9V9/Bishop - 2006 - Pattern recognition and machine learning.pdf:application/pdf},
  pages     = {2}
}

@article{schlesinger_terminology_1979,
  title        = {Terminology for model credibility},
  volume       = {32},
  issn         = {0037-5497, 1741-3133},
  url          = {https://journals.sagepub.com/doi/10.1177/003754977903200304},
  doi          = {10.1177/003754977903200304},
  abstract     = {The standard set of terminology herein described was compiled by the {SCS} Technical Committee on Model Credibility as a report to the general membership.},
  pages        = {103--104},
  number       = {3},
  journaltitle = {{SIMULATION}},
  shortjournal = {{SIMULATION}},
  author       = {Schlesinger, Stewart},
  urldate      = {2025-04-10},
  date         = {1979-03},
  note         = {Publisher: {SAGE} Publications},
  file         = {PDF:/home/igna/Zotero/storage/QYJAQNXU/1979 - Terminology for model credibility.pdf:application/pdf}
}


@book{boole_investigation_1854,
  title     = {An Investigation of the Laws of Thought on which are Founded the Mathematical Theories of Logic and Probabilities},
  pagetotal = {451},
  publisher = {Walton and Maberly},
  author    = {Boole, George},
  date      = {1854},
  file      = {PDF:/home/igna/Zotero/storage/7MWT8MTD/_.pdf:application/pdf},
  pages     = {72}
}

@incollection{hutchison_abc_2010,
  location    = {Berlin, Heidelberg},
  title       = {{ABC}: An Academic Industrial-Strength Verification Tool},
  volume      = {6174},
  isbn        = {978-3-642-14294-9 978-3-642-14295-6},
  url         = {http://link.springer.com/10.1007/978-3-642-14295-6_5},
  shorttitle  = {{ABC}},
  pages       = {24--40},
  booktitle   = {Computer Aided Verification},
  publisher   = {Springer Berlin Heidelberg},
  author      = {Brayton, Robert and Mishchenko, Alan},
  editor      = {Touili, Tayssir and Cook, Byron and Jackson, Paul},
  editorb     = {Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Sudan, Madhu and Terzopoulos, Demetri and Tygar, Doug and Vardi, Moshe Y. and Weikum, Gerhard},
  editorbtype = {redactor},
  urldate     = {2025-04-10},
  date        = {2010},
  doi         = {10.1007/978-3-642-14295-6_5},
  note        = {Series Title: Lecture Notes in Computer Science},
  file        = {Full Text:/home/igna/Zotero/storage/6W5ZXZ33/Brayton and Mishchenko - 2010 - ABC An Academic Industrial-Strength Verification Tool.pdf:application/pdf}
}

@article{mcculloch_logical_1943,
  title        = {A logical calculus of the ideas immanent in nervous activity},
  volume       = {5},
  pages        = {115--133},
  journaltitle = {The bulletin of mathematical biophysics},
  author       = {{McCulloch}, Warren S and Pitts, Walter},
  date         = {1943},
  note         = {Publisher: Springer},
  file         = {PDF:/home/igna/Zotero/storage/PY27X6GM/McCulloch and Pitts - 1943 - A logical calculus of the ideas immanent in nervous activity.pdf:application/pdf}
}


@article{popescu_multilayer_2009,
  title        = {Multilayer perceptron and neural networks},
  volume       = {8},
  pages        = {579--588},
  number       = {7},
  journaltitle = {{WSEAS} Transactions on Circuits and Systems},
  author       = {Popescu, Marius-Constantin and Balas, Valentina E and Perescu-Popescu, Liliana and Mastorakis, Nikos},
  date         = {2009},
  file         = {PDF:/home/igna/Zotero/storage/IQUKE4QW/Popescu et al. - 2009 - Multilayer perceptron and neural networks.pdf:application/pdf}
}

@inproceedings{miller_empirical_1999,
  title     = {An empirical study of the efficiency of learning boolean functions using a cartesian genetic programming approach},
  volume    = {2},
  pages     = {1135--1142},
  booktitle = {Proceedings of the genetic and evolutionary computation conference},
  author    = {Miller, Julian F and {others}},
  date      = {1999},
  file      = {PDF:/home/igna/Zotero/storage/F6W6IRF2/Miller and others - 1999 - An empirical study of the efficiency of learning boolean functions using a cartesian genetic program.pdf:application/pdf}
}

@inproceedings{han_approximate_2013,
  location   = {Avignon, France},
  title      = {Approximate computing: An emerging paradigm for energy-efficient design},
  isbn       = {978-1-4673-6377-8 978-1-4673-6376-1},
  url        = {http://ieeexplore.ieee.org/document/6569370/},
  doi        = {10.1109/ETS.2013.6569370},
  shorttitle = {Approximate computing},
  eventtitle = {2013 18th {IEEE} European Test Symposium ({ETS})},
  pages      = {1--6},
  booktitle  = {2013 18TH {IEEE} {EUROPEAN} {TEST} {SYMPOSIUM} ({ETS})},
  publisher  = {{IEEE}},
  author     = {Han, Jie and Orshansky, Michael},
  urldate    = {2025-04-20},
  date       = {2013-05},
  file       = {Submitted Version:/home/igna/Zotero/storage/9HCGJBWS/Han and Orshansky - 2013 - Approximate computing An emerging paradigm for energy-efficient design.pdf:application/pdf}
}

@article{ammes_two-level_2022,
  title        = {Two-Level and Multilevel Approximate Logic Synthesis},
  volume       = {17},
  rights       = {http://creativecommons.org/licenses/by-nc-nd/4.0},
  issn         = {1872-0234, 1807-1953},
  url          = {https://jics.org.br/ojs/index.php/JICS/article/view/661},
  doi          = {10.29292/jics.v17i3.661},
  abstract     = {Approximate computing represents a modern design paradigm that allows systems to have imprecise or inexact execution, aiming to optimize circuit area, performance, and power dissipation. The automatic construction of approximate integrated circuits ({IC}) is performed through computer-aided design ({CAD}) tools available in electronic design automation ({EDA}) frameworks. Approximate logic synthesis ({ALS}), in particular, treats two-level and multilevel topologies of combinational blocks in the development of digital {IC} design. This work provides a survey of {ALS} methods presented in the literature, from the pioneers until the state-of-the-art approaches.},
  pages        = {1--14},
  number       = {3},
  journaltitle = {Journal of Integrated Circuits and Systems},
  shortjournal = {{JICS}},
  author       = {Ammes, Gabriel and Butzen, Paulo Francisco and Reis, André Inácio and Ribas, Renato},
  urldate      = {2025-02-07},
  date         = {2022-12-31},
  keywords     = {Leído, Overview Favorito},
  file         = {Full Text:/home/igna/Zotero/storage/Z7JUE5P9/Ammes et al. - 2022 - Two-Level and Multilevel Approximate Logic Synthesis.pdf:application/pdf}
}

@article{berndt_review_2022,
  title        = {Review of Machine Learning in Logic Synthesis},
  volume       = {17},
  rights       = {http://creativecommons.org/licenses/by-nc-nd/4.0},
  issn         = {1872-0234, 1807-1953},
  url          = {https://jics.org.br/ojs/index.php/JICS/article/view/649},
  doi          = {10.29292/jics.v17i3.649},
  abstract     = {Electronic design automation tools have multiple options that need to be tuned for specific designs and technology nodes. Traditionally, the tuning process is done by teams of expert engineers and demands a large amount of computational resources.In recent years, there has been an increased effort to apply machine learning techniques in electronic design automation problems, attempting to increase the design flow correlation and predictability, hence reducing the time spent on tuning.In this work, we revise modern approaches in electronic design automation and machine learning techniques applied during logic synthesis. We categorize and discuss their core technologies, such as transforming data into images. Machine learning techniques are as good as the available data. Thus, we present existing learning datasets for logic synthesis and strategies such as data augmentation to overcome the lack of specific data for logic synthesis problems.To cope with these problems, we discuss how research is shifting from traditional supervised learning techniques to reinforcement learning-based methods.},
  pages        = {1--12},
  number       = {3},
  journaltitle = {Journal of Integrated Circuits and Systems},
  shortjournal = {{JICS}},
  author       = {Berndt, Augusto André Souza and Fogaça, Mateus and Meinhardt, Cristina},
  urldate      = {2025-02-21},
  date         = {2022-12-31},
  keywords     = {Leído, Overview Favorito},
  file         = {Full Text:/home/igna/Zotero/storage/Q8IMY2PR/Berndt et al. - 2022 - Review of Machine Learning in Logic Synthesis.pdf:application/pdf}
}

@thesis{barr_investigation_1960,
  title       = {An investigation of the symmetric properties of logical functions},
  institution = {Monterey, California: {US} Naval Postgraduate School},
  type        = {phdthesis},
  author      = {Barr, Robert M},
  date        = {1960},
  file        = {PDF:/home/igna/Zotero/storage/QFDNEGVB/Barr - 1960 - An investigation of the symmetric properties of logical functions.pdf:application/pdf}
}